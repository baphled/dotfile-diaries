Dotfile Diaries
===============

:author:    yomi colledge
:email:     <baphled@boodah.com>

<<<

[colophon]

(c) 2012 Yomi Colledge

All rights reseved

No part of this publication may be reproduced, stored in a retrieval
system, or transmitted, in any form, or by any means, electronic,
mechanical, photocopying, recording, or otherwise, without the prior
consent of the publisher.

<<<

[synopsis]

The goal of this diary is to track the journey of improving my unix-fu and
work flow.

I've come to love my current setup (tmux, oh-my-zsh, Vim, RVM and bundle).
Setting up my environment may well get more complex so I'll setup a script that
will check whether these tools are available and install them if they are not.

Vim and oh-my-zsh are easy, I already have separate repositories for these. I'm
going to be opinionated for the moment an focus on installing the other tools
via brew and apt. I'll check the OS and use the correct install recipe
accordingly.

I'll start off with a very basic workbench and build it up to the point where
it it optimal for my personal use and configurable enough for others to do the
same too.

<<<

[preface]

TO BE WRITTEN

<<<

== Enhancing my workflow

This will be a delve into move the my internet related information back into
the console. I find it cumbersome to keep tabbing back and forth and trying to
keep a mental note of how many times I need to tab to get where I want. In the
terminal this can be manage a lot easier and at least allow me to set things up
more like how I prefer things to be.

****
  duration: 2 weeks
  notes:
    * Setting up irssi
    * Customise irssi to my liking
    * Get the basic of mutt setup
    * Find and customise a command line browser
    * Setup authoring tools
    * Setup tmux and tmuxinator
****

<<<

=== Day 1

So this is the first day of an on going process devised by myself to help
improve and tweak my existing work flow.

For years I've been used to living in the console and staying away from GUI
type tools to do my day to day work

So the idea is to move back to my console and improve my work flow by tweaking
and getting to know my console tools better.

In this blog I'll start with something simple, as the days progress I create a
blog describing what I've learnt today and how it improves my day to day
work flow.

Today is an easy day, I'll start with setting up irssi, a command line
interface for IRC.

What I want here is my old setup tweaked to make it easy to change channels and
see is in a room.

include::day-1-setting-up-irssi.asc[]

<<<

=== Day 2

So I've in the previous posts I've setup irssi and setup twirssi so that I can
keep up to date with my tweets without having to deal with a GUI.

Now I want to tweak my settings so that I can open links easily and have a few
more channels setup in hidden windows.

I'd also like to setup vim-mode for irssi

Today I'll be tweaking Irssi so that I can interact with my Instant
Messager and twitter accounts.

include::day-2-irssi-tweaks.asc[]

<<<

include::day-2-adding-our-im-to-irssi.asc[]

<<<

=== Day 3

So for today, I'd like to stop using twitter and move it my console. I love
Twitter but GUI's are exceptionally slow and I'd like a lot more control over
what I can see when and how it's displayed.

include::day-3-moving-twitter-to-irc.asc[]

<<<

include::day-3-vim-mode-for-irssi.asc[]

<<<

=== Day 4

So I've done quite a bit to get irssi setup and working as I want it.
The last things I want to do is lose my settings or messing something
up, as I have done a number of times already.

include::day-4-keeping-my-settings-under-version-control.asc[]

<<<

include::day-4-opening-links-in-irssi-with-lynx.asc[]

<<<

=== Day 5

So we've got Lynx setup to work with irssi, after doing so I found out
that w3m can deal with tabs and images. Admittedly I'm not particularly
a fan of tabs, mainly as I tend to build up quite a collection of these
and never really go back to them, but I'll give it a whirl and see what
the pros and cons of it as opposed to lynx.

include::day-5-playing-with-w3m.asc[]

<<<

include::day-5-taming-the-mutt.asc[]

<<<

=== Day 6

I've been writing quite a bit recently and have wanted to play around with
git-scribe for authoring my diary and possibly writing projects in the future.

Today I'll be setting up git-scribe and updating my diary so that I can
generate content in various formats. Initially I'll only publish this content
as HTML but then move on to PDF and epub later once I've ironed out the kinks.

include::day-6-setting-up-git-scribe.asc[]

<<<

=== Day 7

So I have a decent setup for browsing, communicating and writing.

Now I want to be able to fire off all of my tools in separate windows so that I
can easily manage them and keep my work flow contained.

include::day-7-setting-up-tmux.asc[]

<<<

== Refine my workflow

I already have my dotfiles under version control but I would like to clean
these up and find a way to make them a little bit more maintainable. Primarily
I want to move away from using braid and my forked version of my dotfiles.

This will lead me towards improving my vim settings and skills.

For this I will setup my dotfiles from scratch and show the pros and cons of my
setup and how I like to have things laid out.

****
  duration: 8 days
  notes:
    * start my dotfiles from scratch
    * define local files to hide
    * setup tmux and tmuxinator
    * pull in my versioned settings (oh-my-zsh, dotmutt, dotirssi)
****

<<<

=== Day 8

Today I'd like to start sketching out how my dotfiles should be setup and
maintained. I'll also come up with some ideas as to what my dotfiles will
include and how to maintain the core dependencies of them.

As some of the setup may change from box to box I shouldn't have to throw
everything into once basket, my dotfiles, I'd like to build some scripts that
handle the dependencies of the setup and makes it easy for me to continue to
tweak it whilst allowing it to be setup on any box with ease.

include::day-8-dotfile-blueprints.asc[]

<<<

=== Day 9

Today I'll be looking at what I have at the moment, in terms of my dotfiles
setup, and what I need to deal to improve it and make it easier to maintain.

include::day-9-starting-anew.asc[]

<<<

include::day-9-setting-up-rvm.asc[]

<<<

include::day-9-removing-braid.asc[]

<<<

=== Day 10

In my old muttrc file I had procmail getting my mails and storing them in
separate folders so that I can work out what was what and how important it was.
I've long since had this setup and I've pretty much forgotten how it was all
setup.

Today is the day I start getting this setup back, this only be the start I want
to be able to view all my email account via mutt and drop the UI all together.
I look into email filtering and gradually improve my mutt as I go along.

include::day-10-improving-mutt.asc[]

<<<

=== Day 11

So my email is being retrieve, manually, so now I'd like to focus on getting
this setup to be retrieved automatically and work out some procmail recipes so
that I my email is nicely organised for me. 

include::day-11-organising-my-email.asc[]

<<<

include::day-11-rebasing-my-master-branch.asc[]

<<<

=== Day 12

There are a couple of small things that need to be adressed before I introduce
my other email accounts. As it stands I have filtered mail but there is no easy
way of getting to my filtered inbox without some hassle. I need to setup a way
to let mutt automatically know which mailboxes I have without having to
constantly update my muttrc file. 

include::day-12-update-mailboxes-on-the-fly.asc[]

<<<

Now that I have a semi decent mutt setup I'd like to setup multiple SMTP
servers. It'd be cool if mutt could be configured so that I could send a reply
and the correct SMTP server is used, along with the right response header.

include::day-12-adding-multiple-smtp-accounts.asc[]

<<<

=== Day 13

I'd like to organise my RSS feeds into mutt or an alternative news reader so
that I can easily keep up with current tech. Today I'll dedicate some time into
getting this setup.

include::day-13-getting-a-newsreader.asc[]

<<<

include::day-13-adding-newsbeuter-to-my-workbench.asc[]

<<<

=== Day 14

Braid is causing me hassle and as part of cleaning up my dotvim files I want to
replace braid with git submodule. This will be part of the cleanup needed for
dotvim files in preparation of me improving my vim skills.

include::day-14-removing-vims-braid.asc[]

<<<

include::day-14-reinstalling-my-dotvim-plugins.asc[]

<<<

=== Day 15

So I now have a news reader so the only thing left to setup are my podcasts.
I've been using itunes of late and would like to move away from that and see
what newsbeuter has to offer in the way of helping me to keep up with podcasts.

include::day-15-managing-my-podcasts.asc[]

<<<

include::day-15-splitting-my-workbench.asc[]

<<<

== Learn my tools

NOTE: Write introduction

Will need to decide on plugins to learn

****
  duration: 1 week per plugin
  start:    week 15
  plugin list:
    * surround
    * text objects
    * macros
    * gundo
  notes:
    * this could be done after the intial 6 weeks
****

<<<

=== Day 16

The first thing I'm going to need to do is delete my old repository and create
a new one with the same name. This will bork my `dotfile` repository submodule
but I can easily fix that by either updating the reference manually or removing
and reinstall the plugin via the command line.

Before I do this I want to move some of my settings around so that they can be
easily added or left out if I desire. My aim here is to make it easier to
choose the vim setup I prefer.

My initial setup will be a bare bones version of Vim with little to none
plugins added. As I gain more proficiency I will gradually add plugins to my
workflow to help enhance the keystokes I have already learnt. The first of
these will focus on text objects and then I will focus on movements and making
project wide changes.

I will stick with plugins that enhance the mime types available to me and help
with some basic formatting. Once I have this under my belt I will start to
delve into VIML and creating my own plugins and tweaks.

Whilst doing all this I will be picking up a Practical Vim tip a day to help me
productivity. These will generally be separate entries and will go over what
I've learnt and how the new skill could be used to improve how I work.

include::day-16-cleaning-up-my-vim-settings.asc[]

<<<

=== Day 17

include::day-17-tweaking-my-custom-vim-plugin.asc[]

<<<

include::day-17-tweaking-my-ruby-fu-in-vim.asc[]

<<<

include::day-17-giving-my-syntax-some-sugar.asc[]

<<<

=== Day 18

I've used netrw for a while but I tend to use it quite sloppily, I'd like to
spend some time tweaking it so that it works better for my needs.
Today I'd like to play around with vim-ractoring. I'd also like to have my
ctags back so that I can look up methods and objects easily.

include::day-18-setting-up-vim-ruby-refactoring.asc[]

<<<

include::day-18-adding-ctags.asc[]

<<<

=== Day 19

Today I'm going to work on my navigation and manipulation of files and content.

include::day-19-tweaking-nerdtree.asc[]

<<<

include::day-19-being-unimpaired.asc[]

<<<

=== Day 20

Today I'll carry on from where I left off yesterday.

include::day-20-carry-on-where-i-left-off.asc[]

<<<

include::day-20-removing-some-pain.asc[]

<<<

=== Day 21

I use Vim for a number of my editing needs. Ranging from writing this diary to
formatting documentation and coding. I'd like to organise these work flows into
different settings allowing me to easily switch between the various work flows
with relative ease.

include::day-21-getting-an-itinerary.asc[]

<<<

include::day-21-plugins-to-learn.asc[]

<<<

=== Day 22

include::day-22-installing-gist-vim.asc[]

<<<

include::day-22-reviewing-vim-pastie.asc[]

<<<

=== Day 23

So today I'll be looking at 'Autotag' and 'syntastic' which are the programming
related plugins that I use when working in Vim. I'll also be looking at my
documentation plugins which include the following plugings:

 * autotag
 * syntastic
 * nerdcommenter
 * asciidoc-vim
 * vimwiki

<<<

include::day-23-what-is-autotag.asc[]

<<<

include::day-23-syntastic.asc[]

<<<

include::day-23-nerdcommenter.asc[]

<<<

include::day-23-asciidoc-vim.asc[]

<<<

include::day-23-vimwiki.asc[]

<<<

=== Day 24

Today I'll be looking at the plugins that generally enhance my productivity
whilst working in Vim. These plugins tend to enhance Vim's out of the box
functionality and add a few nice features to allow me to work more efficiently.

include::day-24-bufexplorer.asc[]

<<<

include::day-24-vim-repeat.asc[]

<<<

include::day-24-AutoComplPop.asc[]

<<<

== Dressing down Vim

****
  duration: 6 weeks
  location: everywhere
  notes:
    * pain experienced
    * learn more about text objects
    * improve my knowledge of motions
    * what was missed
    * what did I learn (daily log)
    * use `:map` in Vim to learn new mappings
    * use vimtutor
****

--
[NOTE]
I can use my current Vim setup to workout which typographically based
plugins I'll be using and write a basic explanation as to why they are useful and
why I can't live without them.
--

<<<

=== Day 25

As it stands at present I've forked my version from
https://github.com/astrails/dotvim[here].

Which was cool to start off with but I've had to make a heap of changes and to
be honest I'd rather start from scratch and setup my own Vim rig. I'd like the
coming next 6 weeks to focus on storing the grass roots functionality of Vim
into muscle memory. I'll be referring to
http://pragprog.com/book/dnvim/practical-vim[Practical Vim] a lot which has been
a great source of knowledge for me in the past year.

<<<

=== Day 34

NOTE: Turn this section into a workflow based entry

I used to keep up to date with my daily TV shows via bittorrent of late is has
become something of a challenge as I have had less and less time to actually
take the time to keep up to date and track what is currently out.

I'd like to find a usable bit torrent client that will help me do this and help
me to be notified of new TV episodes coming out.

<<<

=== Day 35

I've setup w3m but I haven't really had time to experiment with it. I know it
can open images and it can apparently open tabs but I have never played with
the former. It would be cool to work out how this happens so I can tell tmux to
open a new tab with a link when ever I feel. This way if I have a link copied
and can quickly trigger a tmux mapping and get it open a new tab in the
'Interwepts' window :)

I have IRC setup but I still need to tweak it somewhat so that I can use it
more as I used to. One of the primary uses of IRC for me is using XDCC. On my
old windows machine I used to have a script that allowed me to gather a list of
interesting files to download and queue them up accordingly. It allowed me to
only download a certain amount of files at a time and move them to a completed
directory once each one had finished downloading. I'd like to replicate this in
irssi so that I don't have to spend time finding content of interest and simply
choose what I want and forget about it.

I've been using bjurl and twirssi for a little bit now but I still don't know
how to use it as productively as I know my GUI tools. Today and tomorrow will
be focused on getting to know these tool better and spending some time getting
the to work just as I would like to use them.

bjurl should be easy to tweak, I want to be able to keep track of as many URL's
as possible without having to reset it or be quick enough to select a link to
view. I should simply be able to select one from what I see and not have to
deal with anything else. 

<<<

=== Day 36

Today is that day I start hacking on some scripts and start to get used to some
of the tools I've neglected to use over the years. My main focus will be to
improve he way I use sed and awk and improve my bash script so that I can
quickly hack some workflow scripts together to help tweak my productivity
further.

<<<

=== Day 37

<<<

=== Day 38

Today I'll work on getting to know twirssi a little bit more. These are the
most important things I want to get to know so that I can become more
productive with the tool and be able to track conversations I've had and what
other people are saying to each other.

  * How do I view conversations

<<<

== Housekeeping tools

****
  duration: 4 weeks
  notes:
    * manage personal credentials
    * notifications and alerts via tmux
    * define local files to hide
    * create script to check for my dotfile dependancies
      * Should download them if they are not found
****

<<<

[[appendix]]
[appendix]

== Appendix

This is a dumping ground for various notes I've taken in regards to improving
my workflow.

There's no real structure to these and they are used purely to help me to
remember things that I'd like to address at some point or content that I have
not found a home for yet.

include::notes/dev_scribbles.asc[]

<<<

include::notes/dotfiles.asc[]

<<<

include::notes/irssi.asc[]

<<<

include::notes/twirssi.asc[]

<<<

include::notes/oh-my-zsh.asc[]

<<<

include::notes/tmux.asc[]

<<<

include::notes/vim.asc[]

<<<

include::notes/vim-plugins.asc[]

<<<

include::notes/mac-console-fu.asc[]

<<<

=== Upgrading wet ware

Various notes and goals on what I want to achieve whilst writing this diary.

<<<

include::notes/sharping_those_tools.asc[]

<<<

include::notes/things_i_want_to_learn.asc[]

<<<

include::notes/procmail-recipe-workflow.asc[]

<<<

include::notes/remapping-my-fingers.asc[]

<<<

include::notes/nix_stuff.asc[]

<<<

=== Work flows

I have a number of work flows I'd like to tweak and improve on. Here I'll take
notes and track my thoughts and ideas.

<<<

include::notes/workbench.asc[]

<<<

include::notes/authoring_scripts.asc[]

<<<

include::workflows/new-projects.asc[]

<<<

include::workflows/ruby-projects.asc[]

<<<

include::notes/dependancies.asc[]

<<<

Some things I'd like to help tweak my productivity

include::notes/wishlist.asc[]

<<<

=== Tips and tricks

include::notes/scripting.asc[]

<<<

[template="bibliography", id="resources"]
== Resources

Cool stuff I've picked up on my search

include::notes/resources.asc[]
