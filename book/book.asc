Dotfile Diaries
===============

:Author:    Yomi Colledge
:Email:     <baphled@boodah.com>

== Goal

The goal of this diary is to track the journey of improving my unix
and workflow.

I've come to love my current setup (tmux, oh-my-zsh, vim, rvm and bundle).
Setting up my environemnt may well get more complex so I'll setup a script that
will check whether these tools are available and install them if they are not.

vim and oh-my-zsh are easy, I already have separate repositories for these. I'm
going to be opinionated for the moment an focus on installing the other tools
via brew and apt. I'll check the OS and use the correct install recipe
accordingly.

I'll start off with a very basic workbench and build it up to the point where
it it optimal for my personal use and configurable enough for others to do the
same too.

== The journey

include::notes/the_journey.asc[]

== Dependancies

include::notes/dependancies.asc[]

== Enhancing my workflow

This will be a delve into move the my internet related information back into
the console. I find it cumbersome to keep tabbing back and forth and trying to
keep a mental note of how many times I need to tab to get where I want. In the
terminal this can be manage alot easier and at least allow me to set things up
more like how I prefer things to be.

****
  duration: 2 weeks
  start:    day 0
  notes:
    * Setting up irssi
    * Customise irssi to my liking
    * Get the basic of mutt setup
    * Find and customise a command line browser
    * Setup authoring tools
    * Setup tmux and tmuxinator
****

== Day 1

So this is the first day of an on going process devised by myself to help
improve and tweak my existing workflow.

For years I've been used to living in the console and staying away from GUI
type tools to do my day to day work

So the idea is to move back to my console and improve my workflow by tweaking
and getting to know my console tools better.

In this blog I'll start with something simple, as the days progress I create a
blog describing what I've learnt today and how it improves my day to day
workflow.

Today is an easy day, I'll start with setting up irssi, a command line
interface for IRC.

What I want here is my old setup tweaked to make it easy to change channels and
see is in a room.

include::day-1-setting-up-irssi.asc[]

== Day 2

So I've in the previous posts I've setup irssi and setup twirssi so that I can
keep up to date with my tweets without having to deal with a GUI.

Now I want to tweak my settings so that I can open links easily and have a few
more channels setup in hidden windows.

I'd also like to setup vim-mode for irssi

Today I'll be tweaking Irssi so that I can interact with my Instant
Messagers and twitter accounts.

include::day-2-irssi-tweaks.asc[]
include::day-2-adding-our-im-to-irssi.asc[]

== Day 3

So for today, I'd like to stop using twitter and move it my console. I love
Twitter but GUIs are hella slow and I'd like a lot more control over what I can
see when and how it's displayed.

include::day-3-moving-twitter-to-irc.asc[]
include::day-3-vim-mode-for-irssi.asc[]

== Day 4

So we`ve done quite a bit to get irssi setup and working as I want it.
The last things I want to do is lose my settings or messing something
up, as I have done a number of times already.

include::day-4-keeping-my-settings-under-version-control.asc[]
include::day-4-opening-links-in-irssi-with-lynx.asc[]

== Day 5

So we've got Lynx setup to work with irssi, after doing so I found out
that w3m can deal with tabs and images. Admittedly I'm not particularly
a fan of tabs, mainly as I tend to build up quite a collection of these
and never really go back to them, but I'll give it a whirl and see what
the pros and cons of it as opposed to lynx.

include::day-5-playing-with-w3m.asc[]
include::day-5-taming-the-mutt.asc[]

== Day 6

I've been writing quite a bit recently and have wanted to play around with
git-scribe for authoring my diary and possibly writing projects in the future.

Today I'll be setting up git-scribe and updating my diary so that I can
generate content in various formats. Initially I'll only publish this content
as HTML but then move on to PDF and epub later once I've ironed out the kinks.

include::day-6-setting-up-git-scribe.asc[]

== Day 7

So I have a decent setup for browsing, communicating and writing.

Now I want to be able to fire off all of my tools in separate windows so that I
can easily manage them and keep my workflow contained.

include::day-7-setting-up-tmux.asc[]

== Refine my workflow

I already have my dotfiles under version control but I would like to clean
these up and find a way to make them a little bit more maintainable. Primarily
I want to move away from using braid and my forked version of my dotfiles.

This will lead me towards improving my vim settings and skills.

For this I will setup my dotfiles from scratch and show the pros and cons of my
setup and how I like to have things laid out.

----
duration: 2 weeks
start:    1 week
notes:
  * start my dotfiles from scratch
  * define local files to hide
  * setup tmux and tmuxinator
  * pull in my versioned settings (oh-my-zsh, dotmutt, dotirssi)
----

== Day 8

Today I'd like to start sketching out how my dotfiles should be setup and
maintained. I'll also come up with some ideas as to what my dotfiles will
include and how to maintain the core dependancies of them.

As some of the setup may change from box to box I shouldn't have to throw
everything into once basket, my dotfiles, I'd like to build some scripts that
handle the dependancies of the setup and makes it easy for me to continue to
tweak it whilst allowing it to be setup on any box with ease.

include::day-8-dotfile-blueprints.asc[]

== Day 9

Today I'll be looking at what I have at the moment, in terms of my dotfiles
setup, and what I need to deal to improve it and make it easier to maintain.

include::day-9-setting-up-rvm.asc[]

include::day-9-removing-braid.asc[]

== Day 10

In my old muttrc file I had procmail getting my mails and storing them in
separate folders so that I can work out what was what and how important it was.
I've long since had this setup and I've pretty much forgotten how it was all
setup.

Today is the day I start getting this setup back, this only be the start
I want to be able to view all my email account via mutt and drop the UI all
together. I look into email filtering and gradually improve my mutt as I go
along

== Day 14

I've setup w3m but I haven't really had time to experiment with it. I know it
can open images and it can apparently open tabs but I have never played with
the former. It would be cool to work out how this happens so I can tell tmux to
open a new tab with a link when ever I feel. This way if I have a link copied
and can quickly trigger a tmux mapping and get it open a new tab in the
'Interwepts' window :)

== Day 22

Today i'll strip break my fork and eat dog food. I'll need a clean Vim setup if
I'm going to go back to grass roots Vim, so in order to do this successfully, I
need to branch off my dotfiles and start with the bare basics.

I'll need to work out what qualifies as the bare basics as some plugings
(generally those for improve syntax highlighting) I'd like from the jump off
but I guess I should document why I decided to add them from the very start.

[NOTE]
I can use my current vim setup to workout which typographically based plugins
I'll be using and a basic explaination as to why they are useful and why I
can't live without them.

== Day 23

Today's a doing do, I need to pull in all my customised setup repositories into
my dotfiles, I'll start by setting up Vim from scratch and add some basic
mappings that help things along.

== Day 24

So I have a nice shiny Vim setup, today will be the day that I go back to grass
roots Vim and pick up some new skills along the way.

I idea here is that I improve the way I use Vim in general and get more
intimate with the basics of Vim, so when it comes to tweaking it with plugins,
I have a better understanding of what plugins are good and what plugins are
bad.

== Day 25

As it stands at present I've forked my version from
https://github.com/astrails/dotvim[here].

Which was cool to start off with but I've had to make a heap of changes and to
be honest I'd rather start from scratch and setup my own vim rig. I'd like the
coming next 6 weeks to focus on storing the grass roots functionality of vim
into muscle memory. I'll be referring to
http://pragprog.com/book/dnvim/practical-vim[Practical Vim] alot which has been
a great source of knowledge for me in the the past year.

== Garbled notes

This is a dumping ground for various notes I've taken in regards to improving
my workbench.

There's no real structure to these and they are used purely to help me to
remember things that I'd like to address at some point or content that I have
not found a home for yet.

include::notes/dev_scribbles.asc[]

include::notes/dotfiles.asc[]

include::notes/irssi.asc[]

include::notes/twirssi.asc[]

include::notes/oh-my-zsh.asc[]

include::notes/tmux.asc[]

include::notes/vim.asc[]

include::notes/mac-console-fu.asc[]

== Upgrading wetware

Various notes and goals on what I want to achieve whilst writing this diary.

include::notes/sharping_those_tools.asc[]

include::notes/things_i_want_to_learn.asc[]

== Workflows

I have a number of workflows I'd like to tweak and improve on. Here i'll take
notes and track my thoughts and ideas.

include::notes/workbench.asc[]

include::notes/authoring_scripts.asc[]

== Resources

Cool stuff I've picked up on my search

include::notes/resources.asc[]

== Wish list

Some things I'd like to help tweak my productivity

include::notes/wishlist.asc[]