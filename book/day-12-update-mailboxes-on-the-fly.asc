=== Update mailbox list

I had problems trying to get mutt to list all my mail boxes internally
due to my bash noobishness but I did find a way to do it
semi-automatically. I'd like to improve on this process so that I can
make it a lot easier to be able to keep my inbox list up to date whilst
keeping mutt open.

==== The idea

So it was pretty easy to create a script that lists all the files in my
mail directory and returns them as a list of arguments. I then loop over
each mailbox and echo out the format needed for mutt to recognise it as
a mailbox.

Once I have the desired string I then send it to a mutt config file in a
format mutt can recognise.

  mailboxes =inbox =foodie =gaming

==== Bringing it to life

This did actually take some time to work out the simplist way of
actually getting a list of mailboxes without having to update my muttrc
everytime one was discovered.

I knew the best way to do this via the command line but I wasn't
completely sure how. I first start off by getting a list of inboxes and
piping the results to xargs so that I could loop over each of them but
this caused a broken pipe error when ran as a subcommand in my muttrc.
After a while of hacking a few concepts I remember how useful sed is in
these situations. I ended up with the below code snippet which actually
did what I wanted for the time being.

  mailboxes `ls -r ~/Mail | xargs | sed 's/ / =/g' | sed 's/inbox/=inbox/'`

.Hack alert
[NOTE]:
I'm aware that this could be improved, ideally I want to prepend a '='
to the first word instead of relying on the fact the inbox will always
be the first work back.

The above comand basically lists all the files in the `~/Mail` directory
and adds them to a list and finally appends '=' to each inbox. This way
I don't have to worry about new inboxes being created and having to keep
track of them. I sinply have to create a new procmail recipe and let
mutt work out where the new inboxes are stored :)
