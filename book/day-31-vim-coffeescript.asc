==== vim-coffee-script

This is another plugin centered around my frontend activities and bring coffeescript support into my 'vim'. The added
bonus of this plugin is that not only does it have syntax highlighting but it also allows you to compile coffeescript
into Javascript straight from 'vim'.

To compile coffeescript you run the following command:
  :CoffeeMake

Output can also be hidden using the following alternative:
  :silent CoffeeMake

I can also set coffeescript files to compile automatically with the following setting in my vimrc:
  au BufWritePost *.coffee silent CoffeeMake!

NOTE: When compiling coffeescript I'll need to set the path to coffee so that the plugin knows where to find it. 

I'll refrain from doing this at the moment as I tend to use coffeescript with Rails, which deals with compiling
coffeescript within the asset pipeline, but it is a useful thing to note down and I'm sure once I get to the point of
defining different vim workflows I'll be able to conditionally set this for pure JS projects that I work on in the
future.

The is also the ability to compile sections of coffeescript which seems interesting. Similarly to specifying a range in
other command you simply prefix the range you want to specify with the compile command:

  3,5 CoffeeCompile

There is also the ability to run coffeelint on a file to sanity check it, which is also very nice. The one thing I hate
is watching everything compile and pass yet to find that lint doesn't like what I've done.

  :CoffeeLint

I'll need to add coffeelint to my toolchain and tell the plugin where to find it by supplying the following command in
my vimrc:
  let coffee_linter = '/usr/bin/coffeelint'

Finally I can run coffeescript directly within vim with the following:
  :CoffeeRun

This will open up another buffer with the scripts output in it.
