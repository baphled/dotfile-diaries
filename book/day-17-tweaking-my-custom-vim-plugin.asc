=== Tweaking my test function

So I have a few custom bindings to run work out what kind of test I am
running and run it with the right tool.

This has proved quite useful in the past allowing me to run `<leader>t`
to run the current or last run test file. The other binding is set to
`<leader>T` which runs the closest test to the current line number.

These have served me well up to today when I had some performance
testing to do and testunit was the only tool setup for the project I was
working on. 

NOTE: Find link to Gary's dotfiles.

My bindings were originally stolen from "Gary Bernhardt's dotfiles" and
was tweaked by myself to include cucumber. Now it's time to fix the
issue with testunit.

To run my unit tests I will need the following command:

  exec ":!bundle exec ruby -I\"lib:test\" " . a:filename "

This runs my unit test in the correct environemnt. There is one issue
with this. The firstly the other tool we can simple run the test we are
interested with by appending ':1' where '1' is the line number. The
issue with doing this with my unittests is that it is not the expected
command and will error out.

  :!bundle exec ruby -I"lib:test" test/performance/browsing_test.rb:9
  ruby: No such file or directory -- test/performance/browsing_test.rb:9
  (LoadError)

  shell returned 1

  Press ENTER or type command to continue

this isn't what I want in this case and it would be cool o actually get
this to work properly as it is a large part of my typical development
workflow.

To do this I will need to be able to capture the method name relating to
the unit test file. To do this I will need to capture the number and get
the contents of the first and last 5 lines on either side of the line
number received. What ever the closest method name is we'll use to run a
single unit test.

I'll focus on this another day once I have improve my VIML.

==== TODO

 * Talk about my development workflow

==== Resources

  * http://flavio.castelli.name/2010/05/28/rails_execute_single_test/[executing test unit rails]
