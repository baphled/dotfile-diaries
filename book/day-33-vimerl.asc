==== vimerl

****
  plugin:   vimerl
  homepage: http://github.com/jimenezrick/vimerl
  source:   git://github.com/jimenezrick/vimerl.git
****

Whenever I've written Erlang in the past I have used emacs. As I'm using vim at the moment I have installed this plugin
so that I can can focus on using one text editor.

As with the other programming language plugin that come with vim vimerl also has:

  - Syntax highlighting
  - Code indenting
  - Code folding
  - Code completion
  - Syntax checking

===== syntax checking

  * Enables syntax checking - `:ErlangEnableShowErrors`
  * Disables syntax checking and hides current errors - `:ErlangDisableShowErrors`

===== skeletons

Writing boiler plates can be quite borrowing, not to mention error prone, so I like to be able to wipe up a skeleton
structure without having to really do anything.

As I'm quite lazy and I don't like punishing my fingers I've mapped the skeleton commands to make it even easier to
generate a skeleton. 

  * Loads an OTP application skeleton 

  nmap <leader>ea :ErlangApplication<CR>

  * Loads an OTP supervisor skeleton 

  nmap <leader>es :ErlangSupervisor<CR>

  * Loads an OTP gen_server skeleton 

  nmap <leader>eg :ErlangGenServer<CR>

  * Loads an OTP gen_fsm skeleton 

  nmap <leader>ef :ErlangGenFsm<CR>

  * Loads an OTP gen_event skeleton 

  nmap <leader>ege :ErlangGenEvent<CR>

When a skeleton command it executed a header is created with my credentials, in the past I've put this in with my plugin
settings.

  let erlang_skel_header = {"author": "Yomi Colledge", "owner" : "Yomi Colledge"}

For the moment I'll create a `~/.vim_local` file and put my personal settings there.

[NOTE]
Once I have gone through my plugins I'll hack together a script that will allow me to create my personal files so that
other don't have to fork my plugin just to change their personal details. instead the script will ask you a series of
questions and generate the files when they are not found.

  let erlang_folding = 0

  let erlang_highlight_bif = 1

  let erlang_skel_replace = 1

