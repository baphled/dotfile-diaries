==== CtrlP

CtrlP is my "go to" plugin when it comes to being able to open a file quickly without having to type the whole thing
out. I used to use 'Control-T' in the past but that had the extra dependency of needing vim compiled with Ruby support,
though this is not particularly a big deal, 'Control-T' is somewhat slow at time and remembering to compile its binaries
can be a pain. This is where 'CtrlP' takes the lead.

I've never really spent much time seeing what other features 'CtrlP' has that I am not aware of. The main thing I never
really took advantage of or bothered really to look more into is the ability to search by buffer or MRU (most recently
used) files. I could also bind `::CtrlPBuffer` and `:CtrlPMRU` for when I want to be more specific. For the moment I
will hold out on this and make use of `<C-f>` and `<C-b>` to navigate back and forth between search modes.

There is a regexp feature that I have never used (`<C-r>`) I should experiement with this a little to find out what it
is actually capable of for the moment it is enough to make use of searching dependent of search type.

There is also a nice navigation command to allow me to move up a directory `..<CR>`.

I like to have 'CtrlP' search for files in my current project, in which case the setting below does just that. Well that
a bit of a lie, it starts searchs from the directory that contains SCM content. In my case as all my project use git or
another SCM so I know what the root directory is.

  let g:ctrlp_working_path_mode = r                               "Set to a directory that contains .git

I also have 'CtrlP' default overiden so that I can use `<C-P>` for something else. In this case I changed it to the
following:

  let g:ctrlp_map = '<unique> <silent> <Leader><Leader>'

Finally to clear 'CtrlP' cache I use the following mapping:

  nnoremap <unique> <silent> <Leader><Leader><Leader> :CtrlPClearAllCaches<CR>:CtrlP<CR>"

With that I have my file navigation settings pretty much covered for now.
